{"version":3,"sources":["../../tempCollect/helpers/svg.js"],"names":["newEl","tagName","settings","css","el","document","createElementNS","attr","setAttributeNS","textContent","text","style","cssText","newTextEl","y","fill","getNodeTextWidth","textNode","tmp","appendChild","iFrameHolder","getOutputIFrame","body","nodeWidth","getBBox","width","parentNode","removeChild"],"mappings":";;;;;;;AAIA;;;;AAJA;;;;AAMA;;;;;;;AAOA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAUC,QAAV,EAAoBC,GAApB,EAA4B;AACzC,MAAMC,EAAE,GAAGC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuDL,OAAvD,CAAX;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AACA,OAAI,IAAIK,IAAR,IAAgBL,QAAhB,EAAyB;AACxB,QAAGK,IAAI,IAAI,MAAX,EAAkB;AACjBH,MAAAA,EAAE,CAACI,cAAH,CAAkB,IAAlB,EAAwBD,IAAxB,EAA8BL,QAAQ,CAACK,IAAD,CAAtC;AACA;AACD;;AACDH,EAAAA,EAAE,CAACK,WAAH,GAAiBP,QAAQ,CAACQ,IAAT,IAAe,EAAhC;AACAN,EAAAA,EAAE,CAACO,KAAH,CAASC,OAAT,GAAmBT,GAAG,IAAE,EAAxB;AACA,SAAOC,EAAP;AACA,CAXD;AAcA;;;;;;;;;;AAQA,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACH,IAAD,EAAOI,CAAP,EAAUX,GAAV,EAAkB;AACnC,SAAOH,KAAK,CAAC,MAAD,EAAS;AACnBe,IAAAA,IAAI,EAAG,MADY;AAEnBD,IAAAA,CAAC,EAAGA,CAFe;AAGnBJ,IAAAA,IAAI,EAAGA;AAHY,GAAT,EAIR,CAACP,GAAG,IAAE,EAAN,IAAY,4BAJJ,CAAZ;AAKA,CAND;AAQA;;;;;;;;;;AAQA,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACtC,MAAMC,GAAG,GAAGlB,KAAK,CAAC,SAAD,EAAY,EAAZ,EAAgB,oBAAhB,CAAjB;AACAkB,EAAAA,GAAG,CAACC,WAAJ,CAAgBF,QAAhB;;AACAG,2BAAaC,eAAb,GAA+BC,IAA/B,CAAoCH,WAApC,CAAgDD,GAAhD;;AAEA,MAAMK,SAAS,GAAGN,QAAQ,CAACO,OAAT,GAAmBC,KAArC;AACAP,EAAAA,GAAG,CAACQ,UAAJ,CAAeC,WAAf,CAA2BT,GAA3B;AACA,SAAOK,SAAP;AACA,CARD;;eAUe;AACdvB,EAAAA,KAAK,EAAEA,KADO;AAEda,EAAAA,SAAS,EAAEA,SAFG;AAGdG,EAAAA,gBAAgB,EAAEA;AAHJ,C","sourcesContent":["/*\r\nSVG Helpers\r\n*/\r\n\r\nimport iFrameHolder from \"../helpers/iFrameHolder\";\r\n\r\n/**\r\n * Create new SVG element\r\n *\r\n * @param  {string} tagName\r\n * @param  {Object} settings\r\n * @param  {string} css\r\n */\r\nconst newEl = (tagName, settings, css) => {\r\n\tconst el = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n\tsettings = settings || {};\r\n\tfor(let attr in settings){\r\n\t\tif(attr != \"text\"){\r\n\t\t\tel.setAttributeNS(null, attr, settings[attr]);\r\n\t\t}\r\n\t}\r\n\tel.textContent = settings.text||\"\";\r\n\tel.style.cssText = css||\"\";\r\n\treturn el;\r\n};\r\n\r\n\r\n/**\r\n * Creates a new SVG `text` element\r\n *\r\n * @param  {string} text\r\n * @param  {number} y\r\n * @param  {string} css\r\n * @returns {SVGTextElement}\r\n */\r\nconst newTextEl = (text, y, css) => {\r\n\treturn newEl(\"text\", {\r\n\t\t\tfill : \"#111\",\r\n\t\t\ty : y,\r\n\t\t\ttext : text\r\n\t\t}, (css||\"\") + \" text-shadow:0 0 4px #fff;\");\r\n};\r\n\r\n/**\r\n * Calculates the with of a SVG `text` element\r\n *\r\n * _needs access to iFrame, since width depends on context_\r\n *\r\n * @param  {SVGTextElement} textNode\r\n * @returns {number} width of `textNode`\r\n */\r\nconst getNodeTextWidth = (textNode) => {\r\n\tconst tmp = newEl(\"svg:svg\", {}, \"visibility:hidden;\");\r\n\ttmp.appendChild(textNode);\r\n\tiFrameHolder.getOutputIFrame().body.appendChild(tmp);\r\n\r\n\tconst nodeWidth = textNode.getBBox().width;\r\n\ttmp.parentNode.removeChild(tmp);\r\n\treturn nodeWidth;\r\n};\r\n\r\nexport default {\r\n\tnewEl: newEl,\r\n\tnewTextEl: newTextEl,\r\n\tgetNodeTextWidth: getNodeTextWidth\r\n};"],"file":"svg.js"}